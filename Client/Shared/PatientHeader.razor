@inject StateContainer StateContainer
@inject IDialogService Dialog
@inject NavigationManager navigationManager

<div class="patientInfo">
    <div class="addCommentWrapper">
        @if (StateContainer.CurrentPage != Pages.Comment)
        {
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ToComment">добавить комментарий</MudButton>
        }
    </div>
    <MudPaper class="@(isOpen ? "patientInfoToggle activeToggle" : "patientInfoToggle")">
        <MudIconButton Icon="@Icons.Material.Filled.KeyboardArrowDown"
                       OnClick="ToggleOpen"
                       Size="Size.Medium"
                       class=@(isOpen ? "patientInfoToggle-button arrowDown" : "patientInfoToggle-button")></MudIconButton>
        <MudIcon Class="patientInfoToggle-icon" Icon="@Icons.Material.Outlined.AssignmentInd" Color="Color.Primary"></MudIcon>
    </MudPaper>
    @if (isOpen)
    {
        <MudPaper class="patientInfoWrapper">

            <MudText Typo="Typo.h5">Информация о пациенте</MudText>

            <div class="patientInfoData">

                <MudGrid>
                    <MudItem xs="2"><MudText Class="blueText">Поступил:</MudText></MudItem>
                    <MudItem xs="10"><MudText Class="grayText">@((MarkupString)StateContainer.InfoWindow.Admitted)</MudText></MudItem>
                    
                    <MudItem xs="12"><MudText Class="blueText">@StateContainer.InfoWindow.IsWorking</MudText></MudItem>
                    
                    @if (!String.IsNullOrEmpty(StateContainer.InfoWindow.Allergic))
                    {
                        <MudItem xs="2">
                            <MudText Class="blueText">Аллергия:</MudText>
                        </MudItem>
                        <MudItem xs="10">
                            <MudText Class="grayText">@StateContainer.InfoWindow.Allergic</MudText>
                        </MudItem>
                    }
                    
                    @if (!String.IsNullOrEmpty(StateContainer.InfoWindow.Diet))
                    {
                        <MudItem xs="2">
                            <MudText Class="blueText">Диета:</MudText>
                        </MudItem>
                        <MudItem xs="10">
                            <MudText Class="grayText">@StateContainer.InfoWindow.Diet</MudText>
                        </MudItem>
                    }

                    </MudGrid>

            </div>
            <div class="patientInfoButtonsBlock">
                <MudButton Class="headerBtn" OnClick="ShowMedDocs" Color="Color.Secondary" Variant="Variant.Outlined">Медицинские документы</MudButton>
                @if (StateContainer.InfoWindow.LifeAnamnesis != null && !String.IsNullOrEmpty(StateContainer.InfoWindow.LifeAnamnesis.Anamnestext))
                {
                    <MudButton Class="headerBtn" OnClick="ShowAnamnesis" Color="Color.Secondary" Variant="Variant.Outlined">Анамнез жизни</MudButton>
                }
                @if (StateContainer.InfoWindow.AnamnesisMKB != null && !String.IsNullOrEmpty(StateContainer.InfoWindow.AnamnesisMKB.Anamnestext))
                {
                    <MudButton Class="headerBtn" OnClick="ShowAnamnesisMKB" Color="Color.Secondary" Variant="Variant.Outlined">Анамнез заболевания @StateContainer.InfoWindow.AnamnesisMKB.AnamnesType</MudButton>
                }
            </div>
        </MudPaper>
    }

</div>

<style>
    .patientInfo {
        margin-left: 0.5rem;
        margin-top: 0.5rem;
    }

    .patientInfoToggle {
        background-color: #ffffff;
        display: flex;
        padding: 1rem;
        width: 5rem;
        height: 2.5rem;
    }

    .activeToggle {
        border-radius: 4px 4px 0 0;
    }

    .patientInfoToggle-button {
        padding: 0;
        height: 1.5rem;
        margin-top: -0.5rem;
    }

    .patientInfoToggle-icon {
        margin-top: -0.5rem;
    }

    .patientInfoWrapper {
        padding: 1rem;
        background-color: #ffffff;
        border-radius: 0 4px 4px 4px;
        box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 3px 1px 1px 0px;
    }
    .patientInfoData {
        margin-top: 1rem;
    }
    .arrowDown {
        transform: rotate(180deg);
    }
    .grayText {
        color: @DoctorAppWeb.Client.Shared.Colors.Gray
    }
    .blueText {
        color: @DoctorAppWeb.Client.Shared.Colors.Blue
    }
    .patientInfoButtonsBlock {
        margin-top: 1rem;
    }
    .headerBtn {
        margin-right: 1rem;
    }
    .addCommentWrapper {
        position: absolute;
        right: 1.2rem;
    }
</style>

@code {
    bool isOpen = false;

    void ToggleOpen()
    {
        isOpen = !isOpen;
    }

    void ShowAnamnesis()
    {
        string Anamnestext;
        if (StateContainer.InfoWindow.LifeAnamnesis == null || String.IsNullOrEmpty(StateContainer.InfoWindow.LifeAnamnesis.Anamnestext))
        {
            Anamnestext = "";
        }
        else
        {
            Anamnestext = StateContainer.InfoWindow.LifeAnamnesis.Anamnestext;
        }
        var parameters = new DialogParameters
        {
            ["Anamnestext"] = Anamnestext
        };
        DialogOptions options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Small, FullWidth = true };
        Dialog.Show<Anamnesis>("Анамнез жизни", parameters, options);
    }

    void ShowAnamnesisMKB()
    {
        string Anamnestext;
        if (StateContainer.InfoWindow.AnamnesisMKB == null || String.IsNullOrEmpty(StateContainer.InfoWindow.AnamnesisMKB.Anamnestext))
        {
            Anamnestext = "";
        }
        else
        {
            Anamnestext = StateContainer.InfoWindow.AnamnesisMKB.Anamnestext;
        }
        var parameters = new DialogParameters
        {
            ["Anamnestext"] = Anamnestext
        };
        DialogOptions options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true, Position = DialogPosition.Center };
        Dialog.Show<Anamnesis>("Анамнез заболевания", parameters, options);
    }

    void ShowMedDocs()
    {
        DialogOptions options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true, Position = DialogPosition.Center };
        Dialog.Show<MedDocs>("Медицинские документы", options);
    }

    void ToComment()
    {
        isOpen = false;
        StateContainer.CurrentPage = Pages.Comment;
        navigationManager.NavigateTo(Pages.Comment);
    }
}
