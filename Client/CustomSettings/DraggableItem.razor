<div @ondragover="@OnOver"
     @ondrop="@OnDrop"
     @ondragstart="@OnDragStartHandler"
     style="top: @top;" draggable="true" class="item">
    @(title)
</div>

<style>
    .item {
        padding-left: 0.5rem;
        padding-top: 0.25rem;
        padding-bottom: 0.25rem;
        border-radius: 4px;
        border: 1px solid @DoctorAppWeb.Client.Shared.Colors.BorderGray;
        box-shadow: 0px 2px 1px rgb(0 0 0 / 20%);
        margin-bottom: 0.5rem;
        position: absolute;
        min-width: 200px;
        width: calc(31vw - 3rem);
        background-color: #ffffff;
    }
        
   .item:active {
            cursor: grabbing;
        }
</style>

@code {
    [Parameter]
    public string title { get; set; }
    [Parameter]
    public string top { get; set; }
    [Parameter]
    public EventCallback<DragEventArgs> OnDragStart { get; set; }
    [Parameter]
    public EventCallback<DragEventArgs> OnDrop { get; set; }
    [Parameter]
    public EventCallback<DragEventArgs> OnOver { get; set; }

    bool isDragged = false;

    private void OnDragStartHandler(DragEventArgs args)
    {
        isDragged = true;
        OnDragStart.InvokeAsync(args);
    }
}
