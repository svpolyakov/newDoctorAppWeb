@page "/surgery"
@inject IPatientsService PatientService
@inject HttpClient Http
@inject StateContainer StateContainer

<Progress isVisible="@showProgress"></Progress>
<MudPaper Class="innerPageWrapper">
    <div class="pageWrapper">
        <MudText Typo="Typo.h5">
            Операции
        </MudText>
        @if (Surgeries != null && Surgeries.Any())
        {
            foreach (SurgeryDto surgery in Surgeries)
            {
                string sTime = surgery.StartDate != null ? surgery.StartDate.Value.ToString("dd.MM.yyyy HH:mm") : "";
                string eTime = surgery.EndDate != null ? surgery.EndDate.Value.ToString("dd.MM.yyyy HH:mm") : "";

                <MudExpansionPanel>
                    <TitleContent>
                        <MudGrid>
                            <MudItem xs="8">
                                <MudText Typo="Typo.h5">@surgery.SurgeryName</MudText>
                                <MudText Class="grayText" Typo="Typo.body1">@surgery.MainExecutorFIO @surgery.ProducingPointName</MudText>
                                <MudText Class="grayText" Typo="Typo.body1">@surgery.DiagnosText</MudText>
                            </MudItem>
                            <MudItem xs="2">
                                <MudText Class="grayText" Typo="Typo.body1">@sTime</MudText>
                            </MudItem>
                            <MudItem xs="2">
                                <MudText Class="grayText" Typo="Typo.body1">@eTime</MudText>
                            </MudItem>
                        </MudGrid>
                    </TitleContent>
                    <ChildContent>
                        <MudText Class="greenText" Typo="Typo.body1">Заключение:</MudText>
                        <MudText>@((MarkupString)surgery.Conclusion.VersionText)</MudText>
                    </ChildContent>
                </MudExpansionPanel>
            }
        }
        else
        {
            <MudText Typo="Typo.h5">@DoctorAppWeb.Client.Shared.EmptyStateMessages.Surgery</MudText>
        }
    </div>
</MudPaper>
<style>
    .grayText {
        color: @DoctorAppWeb.Client.Shared.Colors.Gray
    }
    .greenText {
        color: @DoctorAppWeb.Client.Shared.Colors.Green
    }
</style>

@code {
    public bool showProgress = true;
    public List<SurgeryDto> Surgeries { get; set; }

    protected override async Task OnInitializedAsync()
    {
        StateContainer.ShowDrawer = true;
        Surgeries = await GetSurgeryListAsync();
    }

    private async Task<List<SurgeryDto>> GetSurgeryListAsync()
    {
        List<SurgeryDto> result = null;
        try
        {
            showProgress = true;
            var httpRequest = new HttpRequestMessage(HttpMethod.Get, "Surgery/SurgeryList");
            httpRequest.Headers.Add("patientId", PatientService.CurrentPatient.ToString());
            HttpResponseMessage httpResponse = await Http.SendAsync(httpRequest);
            result = await httpResponse.Content.ReadFromJsonAsync<List<SurgeryDto>>();
            showProgress = false;
        }
        catch (Exception ex)
        {

        }

        return result;
    }
}
